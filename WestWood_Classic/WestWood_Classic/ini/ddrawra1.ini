[ddraw]
; stretch to custom resolution, 0 = defaults to the size game requests
width=0
height=0
; override width/height and always stretch to fullscreen
fullscreen=false
; bits per pixel, possible values: 16, 24 and 32, 0 = auto
bpp=0
windowed=false
; show window borders in windowed mode
border=true
; maintain aspect ratio
maintas=true
; use letter- or windowboxing to make a best fit
boxing=false
; real rendering rate, -1 = screen rate, 0 = unlimited (GDI), 0 = 125 (OpenGL), n = cap
; Note: maxfps+GDI renderer can be used to slow the game speed down, maxfps+OpenGL will not slow it down
maxfps=120
; vertical synchronization, enable if you get tearing (OpenGL only)
vsync=true
; automatic mouse sensitivity scaling
adjmouse=false
; enable C&C video resize hack, auto = auto-detect game, true = forced, false = disabled
vhack=true
; switch between OpenGL (opengl) and software (gdi) renderers, (auto) = try opengl, fallback = gdi\n"
renderer=auto
; force CPU0 affinity, avoids crashes with RA, *might* have a performance impact
singlecpu=true
; Window position, -1 = center to screen
posX=-1
posY=-1
; Screenshot Hotkey, default = CTRL + G
screenshotKey=G
; Fake cursor position for games that use GetCursorPos and expect to be in fullscreen
fakecursorpos=true
; Hide WM_ACTIVATEAPP messages to prevent freezing on alt+tab (Carmageddon)
noactivateapp=false
; developer mode (don't lock the cursor)
devmode=false
; preliminary libretro shader support (e.g. cubic.glsl) https://github.com/libretro/glsl-shaders (OpenGL only)
shader=
